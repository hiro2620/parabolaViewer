{"version":3,"sources":["components/SvgGraph/RuledLinePath.jsx","components/SvgGraph/ParabolaPath.jsx","components/CountInput.jsx","components/SvgGraph/index.jsx","components/ControlPanel/RangeInput.jsx","components/ControlPanel/EquationField.jsx","components/ControlPanel/index.jsx","components/Header/icons/icon1.svg","components/Header/icons/icon2.svg","components/Header/icons/icon3.svg","components/Header/icons/icon4.svg","components/Header/icons/icon5.svg","components/Header/icons/icon6.svg","components/Header/index.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["textFontSize","RuledLinePath","props","viewBoxSize","lineCount","viewBoxPadding","lineInterval","d","fill","stroke","strokeWidth","x","y","dx","dy","fontFamily","fontSize","Array","keys","map","v","toString","subColor","ParabolaPath","maxValue","showControlPoints","showVertexPoint","funcParams","a","b","c","convXPos","convYPos","f","fPrime","deltaX","ps","p1","p2","pe","width","height","cx","cy","r","opacity","countInput","value","allowZero","label","Form","Group","Label","style","display","ButtonGroup","Button","variant","onClick","setValue","Control","type","aria-label","maxWidth","readOnly","CheckBox","Check","onChange","handleChange","SvgGraph","React","useState","setShowControlPoints","setShowVertexPoint","position","viewBox","xmlns","top","right","setMaxValue","orgRound","base","Math","round","RangeInput","letter","maxInputValue","Number","commitValueChange","marginBottom","color","e","target","marginLeft","EquationField","texString","tex","Wrap","padding","border","borderRadius","children","ControlPanel","vals","setFuncParams","String","raw","setMaxInputValue","Header","Navbar","bg","fixed","borderBottom","boxSizing","Collapse","Nav","className","Icon1","Icon2","Icon3","Icon4","Icon5","Icon6","src","i","Link","href","alt","background","defaultFuncParams","App","Container","marginTop","Row","Col","xs","lg","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gRAEMA,EAAe,KAEN,SAASC,EAAcC,GAAQ,IACpCC,EAA2CD,EAA3CC,YAAaC,EAA8BF,EAA9BE,UAAWC,EAAmBH,EAAnBG,eAC1BC,EAAgBH,EAAc,EAAKC,EAEzC,OACE,qCAEE,sBACEG,EAAC,aAAQJ,EAAc,EAAIE,EAA1B,aAA6CF,EAAcE,EAAiB,EAA5E,4BACDG,KAAK,OACLC,OAAO,OACPC,YAAY,QAEd,sBACEC,EAAC,UAAKR,EAAcE,EAAiB,GACrCO,EAAC,UAAKP,EAAiBF,EAAc,GACrCU,GAAI,EACJC,GAAI,EACJC,WAAW,QACXC,SAAUhB,EACVU,YAAY,IACZF,KAAK,OARP,eAaA,sBACED,EAAC,WAAMJ,EAAc,EAApB,YAAyBE,EAAiB,EAA1C,sCAAyEF,EAAcE,EAAiB,GACzGG,KAAK,OACLC,OAAO,OACPC,YAAY,QAEd,sBACEC,EAAC,UAAKR,EAAc,GACpBS,EAAC,UAAKP,EAAiB,GACvBQ,IAAK,EACLC,IAAK,EACLC,WAAW,QACXC,SAAUhB,EACVU,YAAY,IACZF,KAAK,OARP,eAYA,sBACEG,EAAC,UAAKR,EAAc,GACpBS,EAAC,UAAKT,EAAc,EAAIE,GACxBQ,GAAI,EACJC,GAAI,GACJC,WAAW,QACXC,SAAUhB,EACVU,YAAY,IACZF,KAAK,OARP,eAaC,YAAIS,MAAkB,EAAZb,EAAgB,GAAGc,QAAQC,KAAI,SAACC,GAAD,OACxC,sBACEb,EAAC,aAAQD,EAAec,EAAIf,EAA3B,SACDG,KAAK,OACLC,OAAO,OACPC,YAAY,QACPU,EAAEC,eAGV,YAAIJ,MAAkB,EAAZb,EAAgB,GAAGc,QAAQC,KAAI,SAACC,GAAD,OACxC,sBACEb,EAAC,WAAMD,EAAec,EAArB,YAA0Bf,EAA1B,SACDG,KAAK,OACLC,OAAO,OACPC,YAAY,QACPU,EAAEC,kBC1EjB,IACMC,EAAW,UAGF,SAASC,EAAarB,GAAQ,IACnCC,EAA8ED,EAA9EC,YAAaE,EAAiEH,EAAjEG,eAAgBmB,EAAiDtB,EAAjDsB,SAAUC,EAAuCvB,EAAvCuB,kBAAmBC,EAAoBxB,EAApBwB,gBADxB,EAEtBxB,EAAMyB,WAAlBC,EAFkC,EAElCA,EAAGC,EAF+B,EAE/BA,EAAGC,EAF4B,EAE5BA,EAERC,EAAW,SAAApB,GAAC,OAAKR,GAA0B,EAAXqB,GAAiBb,EAAIR,EAAc,GACnE6B,EAAW,SAAApB,GAAC,OAAMT,GAA0B,EAAXqB,GAAiBZ,EAAIT,EAAc,GAEpE8B,EAAI,SAAAtB,GAAC,OAAIiB,EAAC,SAAGjB,EAAK,GAAIkB,EAAIlB,EAAImB,GAC9BI,EAAS,SAAAvB,GAAC,OAAI,EAAIiB,EAAIjB,EAAIkB,GAE1BM,EAAoB,EAAXX,EAAe,EAExBY,EAAK,CACTzB,EAAGoB,EAASP,GACZZ,EAAGoB,EAASC,EAAET,KAGVa,EAAK,CACT1B,EAAGoB,EAASP,EAAWW,GACvBvB,EAAGoB,EAASC,EAAET,GAAYU,EAAOV,GAAYW,IAGzCG,EAAK,CACT3B,EAAGoB,GAAUP,EAAWW,GACxBvB,EAAGoB,EAASC,GAAGT,GAAYU,GAAQV,GAAYW,IAG3CI,EAAK,CACT5B,EAAGoB,GAAUP,GACbZ,EAAGoB,EAASC,GAAGT,KAGjB,OACE,sBAAKgB,MAAOrC,EAAasC,OAAQtC,EAAaQ,EAAG,EAAGC,EAAGP,EAAvD,UACE,sBACEE,EAAC,YAAO6B,EAAGzB,EAAV,YAAeyB,EAAGxB,EAAlB,cAAyByB,EAAG1B,EAA5B,YAAiC0B,EAAGzB,EAApC,aAA0C0B,EAAG3B,EAA7C,YAAkD2B,EAAG1B,EAArD,aAA2D2B,EAAG5B,EAA9D,YAAmE4B,EAAG3B,GACvEH,OAxCU,UAyCVD,KAAK,gBAGNiB,GACC,qCACE,wBAAQiB,GAAIN,EAAGzB,EAAGgC,GAAIP,EAAGxB,EAAGgC,EAAE,IAAIpC,KAAMc,EAAUuB,QAAS,KAC3D,wBAAQH,GAAIL,EAAG1B,EAAGgC,GAAIN,EAAGzB,EAAGgC,EAAE,IAAIpC,KAAMc,EAAUuB,QAAS,KAC3D,sBAAMtC,EAAC,YAAO6B,EAAGzB,EAAV,YAAeyB,EAAGxB,EAAlB,aAAwByB,EAAG1B,EAA3B,YAAgC0B,EAAGzB,GAAKH,OAAQa,EAAUuB,QAAS,KAC1E,wBAAQH,GAAIJ,EAAG3B,EAAGgC,GAAIL,EAAG1B,EAAGgC,EAAE,IAAIpC,KAAMc,EAAUuB,QAAS,KAC3D,wBAAQH,GAAIH,EAAG5B,EAAGgC,GAAIJ,EAAG3B,EAAGgC,EAAE,IAAIpC,KAAMc,EAAUuB,QAAS,KAC3D,sBAAMtC,EAAC,YAAOgC,EAAG5B,EAAV,YAAe4B,EAAG3B,EAAlB,aAAwB0B,EAAG3B,EAA3B,YAAgC2B,EAAG1B,GAAKH,OAAQa,EAAUuB,QAAS,QAG7EnB,GACC,sBACEf,EAAGoB,GAAUF,GAAK,EAAID,IAAM,EAC5BhB,EAAGoB,EAASC,GAAGJ,GAAK,EAAID,KAAO,EAC/BY,MAAM,IACNC,OAAO,IACPjC,KAAMc,EACNuB,QAAS,Q,uCCtDJ,SAASC,EAAW5C,GAAQ,IAEjC6C,EAA4B7C,EAA5B6C,MAAOC,EAAqB9C,EAArB8C,UAAWC,EAAU/C,EAAV+C,MAY1B,OACE,eAACC,EAAA,EAAKC,MAAN,WACE,cAACD,EAAA,EAAKE,MAAN,CAAYC,MAAO,CAAEC,QAAS,SAA9B,SAA0CL,IAC1C,eAACM,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAQC,QAAQ,YAAYC,QAVjB,YACXV,GAAaD,EAAQ,IACvB7C,EAAMyD,SAASZ,EAAQ,IAQrB,SACE,cAAC,IAAD,MAEF,cAACG,EAAA,EAAKU,QAAN,CACEC,KAAK,OACLC,aAAYb,EACZI,MAAO,CAAEU,SAAU,QACnBhB,MAAOA,EACPiB,UAAQ,IAEV,cAACR,EAAA,EAAD,CAAQC,QAAQ,YAAYC,QAxBtB,WACVxD,EAAMyD,SAASZ,EAAQ,IAuBnB,SACE,cAAC,IAAD,YC7BV,IAAM5C,EAAc,IAIpB,SAAS8D,EAAS/D,GAAQ,IAChB+C,EAAiB/C,EAAjB+C,MAAOF,EAAU7C,EAAV6C,MACf,OACE,sBAAMM,MAAOnD,EAAMmD,MAAnB,SACE,cAACH,EAAA,EAAKC,MAAN,UACE,cAACD,EAAA,EAAKgB,MAAN,CAAYL,KAAK,WAAWZ,MAAOA,EAAOkB,SAAUjE,EAAMkE,aAAcrB,MAAOA,QAOxE,SAASsB,EAASnE,GAAQ,IAC/BsB,EAAyBtB,EAAzBsB,SAAUG,EAAezB,EAAfyB,WADoB,EAGY2C,IAAMC,UAAS,GAH3B,mBAG/B9C,EAH+B,KAGZ+C,EAHY,OAIQF,IAAMC,UAAS,GAJvB,mBAI/B7C,EAJ+B,KAId+C,EAJc,KAMtC,OACE,0BAASpB,MAAO,CAAEqB,SAAU,YAA5B,UACE,sBACEC,QAAO,cAASxE,IAAT,YAAyCA,KAChDyE,MAAM,6BAGNvB,MAAO,CAAEb,MAAO,QALlB,UAOE,cAACvC,EAAD,CAAeE,YAAaA,EAAaE,eA9B1B,GA8B0DD,UAAWoB,IACpF,cAACD,EAAD,CACEpB,YAAaA,EACbE,eAjCa,GAkCbmB,SAAUA,EACVG,WAAYA,EACZF,kBAAmBA,EACnBC,gBAAiBA,OAGrB,0BAAS2B,MAAO,CAAEqB,SAAU,WAAYG,IAAK,EAAGC,MAAO,IAAvD,UACE,cAACb,EAAD,CACEhB,MAAM,uCACNF,MAAOtB,EACP2C,aAAc,kBAAMI,GAAsB/C,MAE5C,cAACwC,EAAD,CACEhB,MAAM,iCACNF,MAAOrB,EACP0C,aAAc,kBAAMK,GAAoB/C,MAE1C,cAAC,EAAD,CACEqB,MAAOvB,EACPmC,SAAUzD,EAAM6E,YAChB9B,MAAM,2BACND,WAAW,U,4BC5DrB,SAASgC,EAASjC,EAAOkC,GAEvB,OAAOC,KAAKC,MAAMpC,EAAQkC,GAAQA,EAGrB,SAASG,EAAWlF,GAAQ,IAKhBkB,EAJjBiE,EAAsCnF,EAAtCmF,OAAQ1D,EAA8BzB,EAA9ByB,WAAY2D,EAAkBpF,EAAlBoF,cACpB1D,EAAYD,EAAZC,EAAGC,EAASF,EAATE,EAAGC,EAAMH,EAANG,EAKRiB,EACW,MAAXsC,GAAwBxD,GAAK,EAAID,GACtB,MAAXyD,EAAuBvD,EAAI,SAACD,EAAK,IAAM,EAAID,GACxC2D,OAAO5D,EAAW0D,IAarBG,EAAoB,SAAAzC,GACxB7C,EAAMkE,aACW,MAAXiB,EAAwB,CAC1BxD,EAAG0D,QAAQ,EAAI3D,EAAImB,GACnBjB,EAAGyD,OAAO3D,EAAC,SAAImB,EAAS,GAAKjB,EAAI,SAACD,EAAK,IAAM,EAAID,KAGpC,MAAXyD,EAAwB,CAC1BvD,EAAGyD,OAAO3D,EAAC,UAAKC,GAAK,EAAID,GAAO,GAAImB,IAE/B,eAAGsC,EAASE,OAAOxC,MAI9B,OACE,cAACG,EAAA,EAAD,CAAMG,MAAO,CAAEb,MAAO,OAAQiD,aAAc,IAA5C,SACE,eAACvC,EAAA,EAAKC,MAAN,WACE,cAACD,EAAA,EAAKE,MAAN,CAAYC,MAAO,CAAEtC,WAAY,QAASC,SAAU,GAAI0E,MAAO,QAA/D,SACGL,IAEH,cAACnC,EAAA,EAAKU,QAAN,CACEb,MAAOiC,EAASjC,EAAO,KACvBoB,SA1BuB,SAAAwB,GAC7BH,EAAkBG,EAAEC,OAAO7C,QA0BrBc,KAAK,SACLR,MAAO,CAAEC,QAAS,eAAgBd,MAAO,OAAQqD,WAAY,MAE/D,cAAC3C,EAAA,EAAKU,QAAN,CACEC,KAAK,QACLM,SAtCmB,SAAAwB,GAEzB,IAAM5C,GAAyB4C,EAAEC,OAAO7C,MAXP,KAAO,KAAuB,EAAhBuC,IAY/CE,EAAkBzC,IAqCZA,OAhDiB3B,EAgDO2B,EAhDoB,KAArB3B,EAAIkE,IAAwC,EAAhBA,IAiDnDjC,MAAO,CAAEqC,MAAO,gB,aC5DX,SAASI,EAAc5F,GAAQ,IACpC6F,EAAc7F,EAAd6F,UACR,OACE,cAAC,IAAD,CAAeC,IAAKD,I,iKCFxB,SAASE,EAAK/F,GACZ,OACE,yBAASmD,MAAO,CAAE6C,QAAS,YAAaC,OAAQ,oBAAqBC,aAAc,EAAGX,aAAc,IAApG,SACGvF,EAAMmG,WAKE,SAASC,EAAapG,GAAQ,IAEnCyB,EAA8BzB,EAA9ByB,WAAY2D,EAAkBpF,EAAlBoF,cAEdlB,EAAe,SAACmC,GAEpBrG,EAAMsG,cAAN,2BACK7E,GACA4E,KAIP,OACE,qCACE,cAACN,EAAD,UACE,cAACH,EAAD,CAAeC,UAAWU,OAAOC,IAAT,SAE1B,cAACT,EAAD,UACG,CAAC,IAAK,IAAK,KAAK9E,KAAI,SAAAC,GAAC,OACpB,cAACgE,EAAD,CACEC,OAAQjE,EACRO,WAAYA,EACZyC,aAAcA,EACdkB,cAAeA,GACVlE,QAIX,cAAC6E,EAAD,UACE,cAACH,EAAD,CAAeC,UAAWU,OAAOC,IAAT,SAE1B,cAACT,EAAD,UACG,CAAC,IAAK,IAAK,KAAK9E,KAAI,SAAAC,GAAC,OACpB,cAACgE,EAAD,CACEC,OAAQjE,EACRO,WAAYA,EACZyC,aAAcA,EACdkB,cAAeA,GACVlE,QAIX,cAAC,EAAD,CACE2B,MAAOuC,EACP3B,SAAUzD,EAAMyG,iBAChB3D,WAAW,EACXC,MAAM,wD,sBC3DC,MAA0B,kCCA1B,MAA0B,kCCA1B,MAA0B,kCCA1B,MAA0B,kCCA1B,MAA0B,kCCA1B,MAA0B,kC,SCa1B,SAAS2D,IACtB,OACE,cAACC,EAAA,EAAD,CAAQC,GAAG,MAAMC,MAAM,MAAM1D,MAAO,CAAE2D,aAAc,oBAAqBC,UAAW,aAAcf,QAAS,GAA3G,SACE,eAACW,EAAA,EAAOK,SAAR,WACE,cAACC,EAAA,EAAD,CAAKC,UAAU,UAAf,SACG,CAACC,EAAOC,EAAOC,EAAOC,EAAOC,EAAOC,GAAOvG,KAAI,SAACwG,EAAKC,GAAN,OAC9C,cAACT,EAAA,EAAIU,KAAL,CAAUC,KAAK,IAAf,SACE,qBACEH,IAAKA,EACLI,IAAG,cAASH,EAAI,GAChBvE,MAAO,CAAE6C,QAAS,EAAG8B,WAAY,QAAS7B,OAAQ,wBAJ9ByB,QAS5B,cAACT,EAAA,EAAIU,KAAL,CAAUC,KAAK,yDAAf,SACE,cAAC,IAAD,CAAczE,MAAO,CAAEb,MAAO,GAAIC,OAAQ,aChBpD,IAAMwF,EAAoB,CACxBrG,EAAG,EACHC,EAAG,EACHC,EAAG,GAoDUoG,MA9Cf,WAAe,MAGuB3D,mBAAS0D,GAHhC,mBAGNtG,EAHM,KAGM6E,EAHN,OAImBjC,mBAPV,IAGT,mBAIN/C,EAJM,KAIIuD,EAJJ,OAK6BR,mBAPf,IAEd,mBAKNe,EALM,KAKSqB,EALT,KAkBb,OACE,sBAAKS,UAAU,MAAf,UACE,cAACR,EAAD,IACA,cAACuB,EAAA,EAAD,CAAW9E,MAAO,CAAE+E,UAAW,IAA/B,SACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,EAAjB,SACE,kCACE,cAAClC,EAAD,CACE3E,WAAYA,EACZ6E,cAAeA,EACflB,cAAeA,EACfqB,iBAAkBA,QAIxB,cAAC2B,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,EAAjB,SACE,cAAC,EAAD,CACEhH,SAAUA,EACVuD,YAAaA,EACbpD,WAAYA,eC/CX8G,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.5a0ba966.chunk.js","sourcesContent":["import React from 'react'\n\nconst textFontSize = '10'\n\nexport default function RuledLinePath(props) {\n  const { viewBoxSize, lineCount, viewBoxPadding } = props\n  const lineInterval = (viewBoxSize / 2) / lineCount\n\n  return (\n    <>\n      {/* x axis */}\n      <path\n        d={`M0 ${viewBoxSize / 2 + viewBoxPadding} h${viewBoxSize + viewBoxPadding / 2} l-5 2 l2 -2 l-2 -2 l5 2`}\n        fill='gray'\n        stroke='gray'\n        strokeWidth='0.5'\n      />\n      <text\n        x={`${viewBoxSize + viewBoxPadding / 2}`}\n        y={`${viewBoxPadding + viewBoxSize / 2}`}\n        dx={8}\n        dy={3}\n        fontFamily='serif'\n        fontSize={textFontSize}\n        strokeWidth='0'\n        fill='gray'\n      >\n        x\n      </text>\n      {/* y axis */}\n      <path\n        d={`M${viewBoxSize / 2} ${viewBoxPadding / 2} l2 5 l-2 -2 l-2 2 l 2 -5 v${viewBoxSize + viewBoxPadding / 2}`}\n        fill='gray'\n        stroke='gray'\n        strokeWidth='0.5'\n      />\n      <text\n        x={`${viewBoxSize / 2}`}\n        y={`${viewBoxPadding / 2}`}\n        dx={-3}\n        dy={-8}\n        fontFamily='serif'\n        fontSize={textFontSize}\n        strokeWidth='0'\n        fill='gray'\n      >\n        y\n      </text>\n      <text\n        x={`${viewBoxSize / 2}`}\n        y={`${viewBoxSize / 2 + viewBoxPadding}`}\n        dx={2}\n        dy={10}\n        fontFamily='serif'\n        fontSize={textFontSize}\n        strokeWidth='0'\n        fill='gray'\n      >\n        O\n      </text>\n      {/* horizontal ruled line */}\n      {[...Array(lineCount * 2 + 1).keys()].map((v) =>\n        <path\n          d={`M0 ${lineInterval * v + viewBoxPadding} h200`}\n          fill='none'\n          stroke='gray'\n          strokeWidth='0.15'\n          key={v.toString()} />\n      )}\n      {/* vertical ruled line */}\n      {[...Array(lineCount * 2 + 1).keys()].map((v) =>\n        <path\n          d={`M${lineInterval * v} ${viewBoxPadding} v200`}\n          fill='none'\n          stroke='gray'\n          strokeWidth='0.15'\n          key={v.toString()} />\n      )}\n    </>\n  )\n}\n","import React from 'react'\n\nconst mainColor = '#263165'\nconst subColor = '#0075FF'\n\n\nexport default function ParabolaPath(props) {\n  const { viewBoxSize, viewBoxPadding, maxValue, showControlPoints, showVertexPoint } = props\n  const { a, b, c } = props.funcParams\n\n  const convXPos = x => (viewBoxSize / (maxValue * 2)) * x + viewBoxSize / 2\n  const convYPos = y => -(viewBoxSize / (maxValue * 2)) * y + viewBoxSize / 2\n\n  const f = x => a * x ** 2 + b * x + c\n  const fPrime = x => 2 * a * x + b\n\n  const deltaX = maxValue * 2 / 3 // interval between start/end point and control points\n\n  const ps = {\n    x: convXPos(maxValue),\n    y: convYPos(f(maxValue)),\n  }\n\n  const p1 = {\n    x: convXPos(maxValue - deltaX),\n    y: convYPos(f(maxValue) - fPrime(maxValue) * deltaX),\n  }\n\n  const p2 = {\n    x: convXPos(-maxValue + deltaX),\n    y: convYPos(f(-maxValue) + fPrime(-maxValue) * deltaX),\n  }\n\n  const pe = {\n    x: convXPos(-maxValue),\n    y: convYPos(f(-maxValue)),\n  }\n\n  return (\n    <svg width={viewBoxSize} height={viewBoxSize} x={0} y={viewBoxPadding} >\n      <path\n        d={`M ${ps.x} ${ps.y} C ${p1.x} ${p1.y}, ${p2.x} ${p2.y}, ${pe.x} ${pe.y}`}\n        stroke={mainColor}\n        fill=\"transparent\"\n      />\n\n      {showControlPoints &&\n        <>\n          <circle cx={ps.x} cy={ps.y} r='2' fill={subColor} opacity={0.5} />\n          <circle cx={p1.x} cy={p1.y} r='2' fill={subColor} opacity={0.5} />\n          <path d={`M ${ps.x} ${ps.y} L${p1.x} ${p1.y}`} stroke={subColor} opacity={0.5} />\n          <circle cx={p2.x} cy={p2.y} r='2' fill={subColor} opacity={0.5} />\n          <circle cx={pe.x} cy={pe.y} r='2' fill={subColor} opacity={0.5} />\n          <path d={`M ${pe.x} ${pe.y} L${p2.x} ${p2.y}`} stroke={subColor} opacity={0.5} />\n        </>\n      }\n      {showVertexPoint &&\n        <rect\n          x={convXPos(-b / (2 * a)) - 3}\n          y={convYPos(f(-b / (2 * a))) - 3}\n          width='6'\n          height='6'\n          fill={subColor}\n          opacity={0.8}\n        />\n      }\n    </svg>\n  )\n}\n","import React from 'react'\nimport {\n  ButtonGroup,\n  Form,\n  Button\n} from 'react-bootstrap'\nimport { BiPlus } from 'react-icons/bi'\nimport { BiMinus } from 'react-icons/bi'\n\nexport default function countInput(props) {\n\n  const { value, allowZero, label } = props\n\n  const add = () => {\n    props.setValue(value + 1)\n  }\n\n  const subtract = () => {\n    if (allowZero || value > 1) {\n      props.setValue(value - 1)\n    }\n  }\n\n  return (\n    <Form.Group>\n      <Form.Label style={{ display: 'block' }}>{label}</Form.Label>\n      <ButtonGroup>\n        <Button variant=\"secondary\" onClick={subtract}>\n          <BiMinus />\n        </Button>\n        <Form.Control\n          type=\"text\"\n          aria-label={label}\n          style={{ maxWidth: '3rem' }}\n          value={value}\n          readOnly\n        />\n        <Button variant=\"secondary\" onClick={add}>\n          <BiPlus />\n        </Button>\n      </ButtonGroup>\n    </Form.Group>\n  )\n}\n","import React from 'react'\nimport RuledLinePath from './RuledLinePath'\nimport ParabolaPath from './ParabolaPath'\nimport CountInput from '../CountInput'\n\nimport {\n  Form\n} from 'react-bootstrap'\n\nconst viewBoxSize = 200\nconst viewBoxPadding = 30\n\n\nfunction CheckBox(props) {\n  const { label, value } = props\n  return (\n    <span style={props.style}>\n      <Form.Group>\n        <Form.Check type=\"checkbox\" label={label} onChange={props.handleChange} value={value} />\n      </Form.Group>\n    </span>\n  )\n}\n\n\nexport default function SvgGraph(props) {\n  const { maxValue, funcParams } = props\n\n  const [showControlPoints, setShowControlPoints] = React.useState(false)\n  const [showVertexPoint, setShowVertexPoint] = React.useState(false)\n\n  return (\n    <section style={{ position: 'relative' }} >\n      <svg\n        viewBox={`0 0 ${viewBoxSize + viewBoxPadding} ${viewBoxSize + viewBoxPadding}`}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        // width={size}\n        // height={size}\n        style={{ width: '100%' }}\n      >\n        <RuledLinePath viewBoxSize={viewBoxSize} viewBoxPadding={viewBoxPadding} lineCount={maxValue} />\n        <ParabolaPath\n          viewBoxSize={viewBoxSize}\n          viewBoxPadding={viewBoxPadding}\n          maxValue={maxValue}\n          funcParams={funcParams}\n          showControlPoints={showControlPoints}\n          showVertexPoint={showVertexPoint}\n        />\n      </svg>\n      <section style={{ position: 'absolute', top: 0, right: 10 }}>\n        <CheckBox\n          label='制御点を表示'\n          value={showControlPoints}\n          handleChange={() => setShowControlPoints(!showControlPoints)}\n        />  \n        <CheckBox\n          label='頂点を表示'\n          value={showVertexPoint}\n          handleChange={() => setShowVertexPoint(!showVertexPoint)}\n        />\n        <CountInput\n          value={maxValue}\n          setValue={props.setMaxValue}\n          label='軸の範囲'\n          allowZero={false}\n        />\n      </section>\n    </section>\n  )\n}\n","import React from 'react'\nimport {\n  Form\n} from 'react-bootstrap'\n\nfunction orgRound(value, base) {\n  // base: digits to be rounded e.g. 0.1\n  return Math.round(value * base) / base;\n}\n\nexport default function RangeInput(props) {\n  const { letter, funcParams, maxInputValue } = props\n  const { a, b, c } = funcParams\n\n  const convInputToValue = v => (v - 50) / (100 / (maxInputValue * 2))\n  const convValueToInput = v => (v + maxInputValue) * 100 / (maxInputValue * 2)\n\n  const value = (() => {\n    if (letter === 'p') return -b / (2 * a)\n    if (letter === 'q') return c - (b ** 2) / (4 * a)\n    return Number(funcParams[letter])\n  })()\n\n  const handleSliderChange = e => {\n    // console.log(convInputToValue(e.target.value))\n    const value = convInputToValue(e.target.value)\n    commitValueChange(value)\n  }\n\n  const handleNumberFormChange = e => {\n    commitValueChange(e.target.value)\n  }\n\n  const commitValueChange = value => {\n    props.handleChange((() => {\n      if (letter === 'p') return ({\n        b: Number(-2 * a * value),\n        c: Number(a * (value ** 2) + c - (b ** 2) / (4 * a)),\n      })\n\n      if (letter === 'q') return ({\n        c: Number(a * (-b / (2 * a)) ** 2 + value),\n      })\n      return { [letter]: Number(value) }\n    })())\n  }\n\n  return (\n    <Form style={{ width: '100%', marginBottom: 30 }}>\n      <Form.Group>\n        <Form.Label style={{ fontFamily: 'serif', fontSize: 20, color: '#333' }}>\n          {letter}\n        </Form.Label>\n        <Form.Control\n          value={orgRound(value, 100)}\n          onChange={handleNumberFormChange}\n          type=\"number\"\n          style={{ display: 'inline-block', width: '7rem', marginLeft: 20 }}\n        />\n        <Form.Control\n          type=\"range\"\n          onChange={handleSliderChange}\n          // value={inputValue}\n          value={convValueToInput(value)}\n          style={{ color: 'black' }}\n        />\n      </Form.Group>\n    </Form>\n  )\n}\n","import React from 'react'\nimport { MathComponent } from 'mathjax-react'\n\n\nexport default function EquationField(props) {\n  const { texString } = props\n  return (\n    <MathComponent tex={texString} />\n  )\n}\n\n","import React, { useState } from 'react'\nimport RangeInput from './RangeInput'\nimport EquationField from './EquationField'\nimport CountInput from '../CountInput'\n\nfunction Wrap(props) {\n  return (\n    <section style={{ padding: '10px 20px', border: '3px solid #0075FF', borderRadius: 4, marginBottom: 10 }}>\n      {props.children}\n    </section>\n  )\n}\n\nexport default function ControlPanel(props) {\n\n  const { funcParams, maxInputValue } = props\n\n  const handleChange = (vals) => {\n    // vals: e.g. {a:1, c:0}\n    props.setFuncParams({\n      ...funcParams,\n      ...vals\n    })\n  }\n\n  return (\n    <>\n      <Wrap>\n        <EquationField texString={String.raw`y=ax^2+bx+c`} />\n      </Wrap>\n      <Wrap>\n        {['a', 'b', 'c'].map(v =>\n          <RangeInput\n            letter={v}\n            funcParams={funcParams}\n            handleChange={handleChange}\n            maxInputValue={maxInputValue}\n            key={v}\n          />\n        )}\n      </Wrap>\n      <Wrap>\n        <EquationField texString={String.raw`y=a(x-p)^2+q`} />\n      </Wrap>\n      <Wrap>\n        {['a', 'p', 'q'].map(v =>\n          <RangeInput\n            letter={v}\n            funcParams={funcParams}\n            handleChange={handleChange}\n            maxInputValue={maxInputValue}\n            key={v}\n          />\n        )}\n      </Wrap>\n      <CountInput\n        value={maxInputValue}\n        setValue={props.setMaxInputValue}\n        allowZero={false}\n        label='スライダーの範囲'\n      />\n    </>\n  )\n}\n","export default __webpack_public_path__ + \"static/media/icon1.8804d4aa.svg\";","export default __webpack_public_path__ + \"static/media/icon2.24d755a4.svg\";","export default __webpack_public_path__ + \"static/media/icon3.bb197821.svg\";","export default __webpack_public_path__ + \"static/media/icon4.aab7457b.svg\";","export default __webpack_public_path__ + \"static/media/icon5.7b577b64.svg\";","export default __webpack_public_path__ + \"static/media/icon6.bda9a303.svg\";","import React from 'react'\nimport {\n  Navbar,\n  Nav\n} from 'react-bootstrap'\nimport Icon1 from './icons/icon1.svg'\nimport Icon2 from './icons/icon2.svg'\nimport Icon3 from './icons/icon3.svg'\nimport Icon4 from './icons/icon4.svg'\nimport Icon5 from './icons/icon5.svg'\nimport Icon6 from './icons/icon6.svg'\nimport { AiFillGithub } from \"react-icons/ai\";\n\nexport default function Header() {\n  return (\n    <Navbar bg=\"sub\" fixed=\"top\" style={{ borderBottom: '4px solid #263165', boxSizing: 'border-box', padding: 0 }}>\n      <Navbar.Collapse>\n        <Nav className=\"mr-auto\">\n          {[Icon1, Icon2, Icon3, Icon4, Icon5, Icon6].map((src, i) =>\n            <Nav.Link href=\"#\" key={i}>\n              <img\n                src={src}\n                alt={`icon${i + 1}`}\n                style={{ padding: 0, background: 'white', border: '3px solid #263165' }}\n              />\n            </Nav.Link>\n          )}\n        </Nav>\n        <Nav.Link href=\"https://github.com/hiro2620/parabolaViewer/tree/master\" >\n          <AiFillGithub style={{ width: 28, height: 28 }} />\n        </Nav.Link>\n      </Navbar.Collapse>\n    </Navbar>\n  )\n}\n","import React, { useState } from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.scss';\nimport {\n  Container,\n  Row,\n  Col\n} from 'react-bootstrap'\n\nimport Graph from './components/SvgGraph'\nimport ControlPanel from './components/ControlPanel'\nimport Header from './components/Header'\n\nconst defaultFuncParams = {\n  a: 1,\n  b: 0,\n  c: 0\n}\n\nconst defaultMaxValue = 10\nconst defaultMaxInputValue = 10\n\nfunction App() {\n\n  // const [windowSize, setWindowSize] = useState(window.innerWidth)\n  const [funcParams, setFuncParams] = useState(defaultFuncParams)\n  const [maxValue, setMaxValue] = useState(defaultMaxValue)\n  const [maxInputValue, setMaxInputValue] = useState(defaultMaxInputValue)\n\n  // useEffect(() => {\n  //   const handleResizeWindow = () => {\n  //     setWindowSize(window.innerWidth)\n  //   }\n  //   window.addEventListener('resize', handleResizeWindow)\n  //   handleResizeWindow()\n  //   return () => {\n  //     window.removeEventListener('resize', handleResizeWindow)\n  //   }\n  // }, [])\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <Container style={{ marginTop: 70 }}>\n        <Row>\n          <Col xs={12} lg={4}>\n            <section>\n              <ControlPanel\n                funcParams={funcParams}\n                setFuncParams={setFuncParams}\n                maxInputValue={maxInputValue}\n                setMaxInputValue={setMaxInputValue}\n              />\n            </section>\n          </Col>\n          <Col xs={12} lg={8}>\n            <Graph\n              maxValue={maxValue}\n              setMaxValue={setMaxValue}\n              funcParams={funcParams}\n            />\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}